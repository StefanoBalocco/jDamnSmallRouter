"use strict";var jDamnSmallRouter;!function(t){t.Create=function(){return new i};class i{constructor(){this.t=new RegExp(/\/(:[\w]+)(?:\[(?:09|AZ)])\/(?:.+\/)?(\1)(?:(?:\[(?:09|AZ)])|\/|$)/g),this.i=new RegExp(/(?<=^|\/):([\w]+)(?:\[(09|AZ)])?(?=\/|$)/g),this.o=[],this.h=void 0,this.l=void 0,this.u=!1,this.p=[],window.addEventListener("hashchange",this.CheckHash.bind(this))}RouteSpecialAdd(t,i){let e=!1;switch(t){case 403:this.h=i,e=!0;break;case 404:this.l=i,e=!0;break;default:throw new RangeError}return e}RouteAdd(t,i,e,n){let s=!1;if(t.match(this.t))throw new SyntaxError("Duplicate path id");{let o=0;const h=t.split("/"),a=h.length;for(let t=0;t<a;t++)h[t].startsWith(":")||(o+=2^a-t-1);let r=new RegExp("^"+t.replace(this.i,(function(t,i,e){let n="(?<"+i+">[";switch(e){case"09":n+="\\d";break;case"AZ":n+="a-zA-Z";break;default:n+="\\w"}return n+="]+)",n})).replace(/\//g,"\\/")+"$");const l=t.replace(this.i,":$2");this.o.find((t=>l==t.path))||(this.o.push({path:l,match:r,weight:o,routeFunction:i,available:e,routeFunction403:n}),this.o.sort(((t,i)=>t.weight>i.weight?-1:i.weight>t.weight?1:0)),s=!0)}return s}RouteDel(t){let i=!1;if(!t.match(this.t))throw new SyntaxError("Duplicate path id");{const e=t.replace(this.i,":$2"),n=this.o.findIndex((t=>e==t.path));-1<n&&(this.o.splice(n,1),i=!0)}return i}Trigger(t){"#"+t!=window.location.hash&&(window.location.hash="#"+t)}async Route(t){var i,e,n,s;let o;this.u=!0;let h="",a=null;for(const n of this.o)if(a=n.match.exec(t)){h=n.path;let s=!0;n.available&&(s=!1,"function"==typeof n.available&&(s="AsyncFunction"===n.available.constructor.name?await n.available(h,t,null!==(i=a.groups)&&void 0!==i?i:{}):n.available(h,t,null!==(e=a.groups)&&void 0!==e?e:{}))),s?o=n.routeFunction:n.routeFunction403?o=n.routeFunction403:this.h&&(o=this.h);break}o&&"function"==typeof o||this.l&&(o=this.l),o&&"function"==typeof o&&("AsyncFunction"===o.constructor.name?await o(h,t,null!==(n=null==a?void 0:a.groups)&&void 0!==n?n:{}):o(h,t,null!==(s=null==a?void 0:a.groups)&&void 0!==s?s:{})),this.p.length?this.Route(this.p.shift()):this.u=!1}async CheckHash(){let t=window.location.hash.startsWith("#")?window.location.hash.substr(1):"";""!=t&&(this.u?this.p.push(t):this.Route(t))}}}(jDamnSmallRouter||(jDamnSmallRouter={}));